name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TypeScript check
      run: |
        echo "Running TypeScript check..."
        npm run type-check
        echo "TypeScript check completed successfully"
      
    - name: Run build
      run: npm run build
      
    - name: Check build output
      run: |
        ls -la dist/
        test -f dist/index.js
        test -f dist/index.esm.js
        test -f dist/index.d.ts

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: npm run build:all
      
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub Release Assets
      run: |
        mkdir -p release-assets
        cp -r dist release-assets/
        cp README.md release-assets/
        cp LICENSE release-assets/
        cp -r examples release-assets/
        zip -r nlcyber-adslot-${{ github.event.release.tag_name }}.zip release-assets/
        
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./nlcyber-adslot-${{ github.event.release.tag_name }}.zip
        asset_name: nlcyber-adslot-${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip
